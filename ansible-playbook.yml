---
- name: Deploy
  hosts: "{{ DEPLOY_HOST }}"
  vars:
    SERVICE_NAME: concentlms_landing
    COMPOSE_PROJECT_NAME: "{{ SERVICE_NAME }}{{ SERVICE_NAME_POSTFIX }}"
    temp_file_dir: "/tmp/{{ COMPOSE_PROJECT_NAME }}"
    env_file_path: "{{ temp_file_dir }}/.env"
    compose_file_path: "{{ temp_file_dir }}/docker-compose.yml"

  tasks:
    - name: Setting host facts using complex arguments
      set_fact:
        HTTP_ADDITIONAL_MIDDLEWARE: ""
      when: HTTP_ALLOWED_IP == ""

    - name: Setting host facts using complex arguments
      set_fact:
        HTTP_ADDITIONAL_MIDDLEWARE: ",{{ COMPOSE_PROJECT_NAME }}_apiIPwhitelist@docker"
      when: HTTP_ALLOWED_IP != ""

    - name: Create project path
      file:
        path: "{{ temp_file_dir }}"
        state: directory

    - name: Copying env file to host
      copy:
        src: .env.dist
        dest: "{{ env_file_path }}"

    - name: Copying compose file to host
      copy:
        src: docker-compose.yml
        dest: "{{ compose_file_path }}"

    - name: Log into private registry and force re-authorization
      become: yes
      docker_login:
        registry: "{{ CI_REGISTRY }}"
        username: "{{ REGISTRY_LOGIN }}"
        password: "{{ REGISTRY_PASSWORD }}"
        reauthorize: yes

    - name: Stopping docker projects
      docker_compose:
        project_src: "{{ temp_file_dir }}"
        state: absent
        remove_orphans: true
      environment:
        COMPOSE_PROJECT_NAME: "{{ COMPOSE_PROJECT_NAME }}"

    - name: Reacreating docker projects
      become: yes
      docker_compose:
        project_src: "{{ temp_file_dir }}"
        state: present
        pull: yes
      environment:
        COMPOSE_PROJECT_NAME: "{{ COMPOSE_PROJECT_NAME }}"
        CI_REGISTRY: "{{ CI_REGISTRY }}"
        CI_REGISTRY_IMAGE: "{{ CI_REGISTRY_IMAGE }}"
        IMAGE_VERSION: "{{ IMAGE_VERSION }}"
        HOST_DOMAIN: "{{ HOST_DOMAIN }}"
        SERVER_NETWORK_NAME: "{{ SERVER_NETWORK_NAME }}"
        HTTP_ALLOWED_IP: "{{ HTTP_ALLOWED_IP }}"
        HTTP_ADDITIONAL_MIDDLEWARE: "{{ HTTP_ADDITIONAL_MIDDLEWARE }}"

    - name: Remove project path file
      file:
        path: "{{ temp_file_dir }}"
        state: absent

    - name: Log out from private registry
      become: yes
      docker_login:
        registry: "{{ CI_REGISTRY }}"
        state: absent

    - name: Waiting for new image to be available
      docker_container_info:
        name: "{{ COMPOSE_PROJECT_NAME }}_web_1"
      register: result
      until: result.container['State']['Health']['Status'] == "healthy"
      retries: 10
      delay: 30
